name: build

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '~1.18.0'

      - name: Install Ziti CI
        uses: netfoundry/ziti-ci@v1

      - name: Build and Test
        run: |
          go install github.com/haveyoudebuggedit/gotestfmt/v2/cmd/gotestfmt@latest
          set -euo pipefail
          go mod download
          go test -json -v ./... 2>&1 | tee /tmp/test.json | gotestfmt -hide empty-packages

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: /tmp/test.json

      # Upload the original go test log as an artifact for later review.
      - name: Upload test log
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-log
          path: /tmp/test.json
          if-no-files-found: error

      - name: Release
        env:
          gh_ci_key: ${{ secrets.GH_CI_KEY }}
          ziti_ci_gpg_key: ${{ secrets.ZITI_CI_GPG_KEY }}
          ziti_ci_gpg_key_id: ${{ secrets.ZITI_CI_GPG_KEY_ID }}
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-')
        run: |
          $(go env GOPATH)/bin/ziti-ci configure-git
          $(go env GOPATH)/bin/ziti-ci tag -v -f version
          $(go env GOPATH)/bin/ziti-ci trigger-github-build openziti/storage update-dependency --token ${{ secrets.ZITI_CI_GH_TOKEN }}
          $(go env GOPATH)/bin/ziti-ci trigger-github-build openziti/transport update-dependency --token ${{ secrets.ZITI_CI_GH_TOKEN }}
          $(go env GOPATH)/bin/ziti-ci trigger-github-build openziti/sdk-golang update-dependency --token ${{ secrets.ZITI_CI_GH_TOKEN }}
